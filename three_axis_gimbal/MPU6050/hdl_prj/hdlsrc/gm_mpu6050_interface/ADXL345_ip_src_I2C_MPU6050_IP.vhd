-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\gm_mpu6050_interface\ADXL345_ip_src_I2C_MPU6050_IP.vhd
-- Created: 2017-11-30 11:08:49
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.0016
-- Target subsystem base rate: 0.0016
-- Explicit user oversample request: 125x
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- (no clock)    0
-- ce_out        0.2
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- SCL                           (no clock)    1.#INF
-- SDA                           (no clock)    1.#INF
-- AccelX                        ce_out        0.2
-- AccelY                        ce_out        0.2
-- AccelZ                        ce_out        0.2
-- validout                      ce_out        0.2
-- deviceID                      ce_out        0.2
-- CS                            (no clock)    1.#INF
-- ADDRALT                       (no clock)    1.#INF
-- RegData                       ce_out        0.2
-- GyroX                         ce_out        0.2
-- GyroY                         ce_out        0.2
-- GyroZ                         ce_out        0.2
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ADXL345_ip_src_I2C_MPU6050_IP
-- Source Path: gm_mpu6050_interface/I2C_MPU6050_IP
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ADXL345_ip_src_I2C_MPU6050_IP IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        RegAddr                           :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        ConfigDevice                      :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        SCL                               :   OUT   std_logic;
        SDA                               :   OUT   std_logic;
        AccelX                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        AccelY                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        AccelZ                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        validout                          :   OUT   std_logic;
        deviceID                          :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        CS                                :   OUT   std_logic;
        ADDRALT                           :   OUT   std_logic;
        RegData                           :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        GyroX                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        GyroY                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        GyroZ                             :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END ADXL345_ip_src_I2C_MPU6050_IP;


ARCHITECTURE rtl OF ADXL345_ip_src_I2C_MPU6050_IP IS

  -- Component Declarations
  COMPONENT ADXL345_ip_src_AXI4LiteRead
    PORT( Out1                            :   OUT   std_logic;
          Out2                            :   OUT   std_logic;
          Out3                            :   OUT   std_logic;
          Out4                            :   OUT   std_logic;
          Out5                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          Out6                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          Out7                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          Out8                            :   OUT   std_logic;
          Out9                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          Out10                           :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          Out11                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          Out12                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          Out13                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
          );
  END COMPONENT;

  COMPONENT ADXL345_ip_src_I2C_MPU6050_IP_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb_1_1_1                       :   OUT   std_logic;
          enb_125_1_0                     :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ADXL345_ip_src_AXI4LiteRead
    USE ENTITY work.ADXL345_ip_src_AXI4LiteRead(rtl);

  FOR ALL : ADXL345_ip_src_I2C_MPU6050_IP_tc
    USE ENTITY work.ADXL345_ip_src_I2C_MPU6050_IP_tc(rtl);

  -- Signals
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb_125_1_0                      : std_logic;
  SIGNAL AXI4LiteRead_out1                : std_logic;
  SIGNAL AXI4LiteRead_out2                : std_logic;
  SIGNAL AXI4LiteRead_out3                : std_logic;
  SIGNAL AXI4LiteRead_out4                : std_logic;
  SIGNAL AXI4LiteRead_out5                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL AXI4LiteRead_out6                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL AXI4LiteRead_out7                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL AXI4LiteRead_out8                : std_logic;
  SIGNAL AXI4LiteRead_out9                : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL AXI4LiteRead_out10               : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL AXI4LiteRead_out11               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL AXI4LiteRead_out12               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL AXI4LiteRead_out13               : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  -- Generated by HDL Workflow Advisor on 18-Nov-2017 14:43:12

  -- <S1>/AXI4LiteRead
  u_AXI4LiteRead : ADXL345_ip_src_AXI4LiteRead
    PORT MAP( Out1 => AXI4LiteRead_out1,
              Out2 => AXI4LiteRead_out2,
              Out3 => AXI4LiteRead_out3,
              Out4 => AXI4LiteRead_out4,
              Out5 => AXI4LiteRead_out5,  -- int16
              Out6 => AXI4LiteRead_out6,  -- int16
              Out7 => AXI4LiteRead_out7,  -- int16
              Out8 => AXI4LiteRead_out8,
              Out9 => AXI4LiteRead_out9,  -- uint8
              Out10 => AXI4LiteRead_out10,  -- uint8
              Out11 => AXI4LiteRead_out11,  -- int16
              Out12 => AXI4LiteRead_out12,  -- int16
              Out13 => AXI4LiteRead_out13  -- int16
              );

  -- <S1>/AXI4LiteWrite
  u_I2C_MPU6050_IP_tc : ADXL345_ip_src_I2C_MPU6050_IP_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb_1_1_1 => enb_1_1_1,
              enb_125_1_0 => enb_125_1_0
              );

  ce_out <= enb_1_1_1;

  SCL <= AXI4LiteRead_out3;

  SDA <= AXI4LiteRead_out4;

  AccelX <= AXI4LiteRead_out5;

  AccelY <= AXI4LiteRead_out6;

  AccelZ <= AXI4LiteRead_out7;

  validout <= AXI4LiteRead_out8;

  deviceID <= AXI4LiteRead_out9;

  CS <= AXI4LiteRead_out1;

  ADDRALT <= AXI4LiteRead_out2;

  RegData <= AXI4LiteRead_out10;

  GyroX <= AXI4LiteRead_out11;

  GyroY <= AXI4LiteRead_out12;

  GyroZ <= AXI4LiteRead_out13;

END rtl;

