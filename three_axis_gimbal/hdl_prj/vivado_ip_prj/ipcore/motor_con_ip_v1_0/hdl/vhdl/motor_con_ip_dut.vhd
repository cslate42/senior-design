-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\motor_controller\motor_con_ip_dut.vhd
-- Created: 2017-11-07 15:16:57
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: motor_con_ip_dut
-- Source Path: motor_con_ip/motor_con_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY motor_con_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        PWM                               :   OUT   std_logic  -- ufix1
        );
END motor_con_ip_dut;


ARCHITECTURE rtl OF motor_con_ip_dut IS

  -- Component Declarations
  COMPONENT motor_con_ip_src_motor_controller
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          ce_out                          :   OUT   std_logic;  -- ufix1
          PWM                             :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : motor_con_ip_src_motor_controller
    USE ENTITY work.motor_con_ip_src_motor_controller(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL PWM_sig                          : std_logic;  -- ufix1

BEGIN
  u_motor_con_ip_src_motor_controller : motor_con_ip_src_motor_controller
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              ce_out => ce_out_sig,  -- ufix1
              PWM => PWM_sig  -- ufix1
              );

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  PWM <= PWM_sig;

END rtl;

