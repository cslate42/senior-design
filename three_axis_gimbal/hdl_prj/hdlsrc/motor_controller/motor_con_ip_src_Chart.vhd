-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\motor_controller\motor_con_ip_src_Chart.vhd
-- Created: 2017-11-07 15:16:50
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: motor_con_ip_src_Chart
-- Source Path: motor_controller/Subsystem/Motor Controller/Chart
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.motor_con_ip_src_motor_controller_pkg.ALL;

ENTITY motor_con_ip_src_Chart IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        ESCPeriod                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        pw                                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        pwm                               :   OUT   std_logic
        );
END motor_con_ip_src_Chart;


ARCHITECTURE rtl OF motor_con_ip_src_Chart IS

  -- Signals
  SIGNAL ESCPeriod_unsigned               : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL pw_unsigned                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL is_Chart                         : T_state_type_is_Chart;  -- uint8
  SIGNAL cnt                              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL is_Chart_next                    : T_state_type_is_Chart;  -- enum type state_type_is_Chart (2 enums)
  SIGNAL cnt_next                         : unsigned(31 DOWNTO 0);  -- uint32

BEGIN
  ESCPeriod_unsigned <= unsigned(ESCPeriod);

  pw_unsigned <= unsigned(pw);

  Chart_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      is_Chart <= IN_on;
      cnt <= to_unsigned(16#00000000#, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        is_Chart <= is_Chart_next;
        cnt <= cnt_next;
      END IF;
    END IF;
  END PROCESS Chart_process;

  Chart_output : PROCESS (is_Chart, ESCPeriod_unsigned, pw_unsigned, cnt)
    VARIABLE add_temp : unsigned(32 DOWNTO 0);
    VARIABLE add_temp_0 : unsigned(32 DOWNTO 0);
  BEGIN
    is_Chart_next <= is_Chart;
    cnt_next <= cnt;
    CASE is_Chart IS
      WHEN IN_off =>
        pwm <= '0';
        IF cnt >= ESCPeriod_unsigned THEN 
          is_Chart_next <= IN_on;
          cnt_next <= to_unsigned(16#00000000#, 32);
          pwm <= '1';
        ELSE 
          add_temp_0 := resize(cnt, 33) + to_unsigned(1, 33);
          IF add_temp_0(32) /= '0' THEN 
            cnt_next <= X"FFFFFFFF";
          ELSE 
            cnt_next <= add_temp_0(31 DOWNTO 0);
          END IF;
        END IF;
      WHEN OTHERS => 
        pwm <= '1';
        IF cnt > pw_unsigned THEN 
          is_Chart_next <= IN_off;
          pwm <= '0';
        ELSE 
          add_temp := resize(cnt, 33) + to_unsigned(1, 33);
          IF add_temp(32) /= '0' THEN 
            cnt_next <= X"FFFFFFFF";
          ELSE 
            cnt_next <= add_temp(31 DOWNTO 0);
          END IF;
        END IF;
    END CASE;
  END PROCESS Chart_output;


END rtl;

